<?php

/**
 * get_results
 *
 * give back a json containing the results generated by the MixMHCp script
 *
 * @param string $result_id
 * @return json
 * @author Roman
 */

function get_results($result_id){

    if(! preg_match('/^\w{13}$/', $result_id)) throw new Exception("ERROR: invalid ResultId", 501);

    // the data directory
    $result_dir = DATA_PATH."/".$result_id."/results/";

    if(! file_exists($result_dir)) throw new Exception("There are no results available for Result ID <strong>".$result_id."</strong>", 501);

    $html_content = file_get_contents($result_dir."/logos.html");

    // get the x-mers and the default x-mer.
    $x_mers = get_x_mers($html_content);
    $default_x_mer = get_default_x_mer($html_content);

    // the function used to construct the result array
    $res_func = function($logo_img, $id, $nr_pep, $pmw){
        $img = "empty.png";
        if($logo_img){
            $img = preg_replace('/"|\..\/logos\//', '', $logo_img);
        }

        return array('id' => $id, 'img' => $img, 'PMW' => (float)$pmw, 'nr_peptides' => (int)$nr_pep);
    };

    // construct x-mer results
    $x_mers_res = array();
    foreach($x_mers as $x_mer){
        $motif_res = array();

        $x_mer_content = file_get_contents($result_dir."/logos_html/logos_L".$x_mer.".html");
        $motifs = get_motifs_from_html($x_mer_content);
        #$motifs = [9];

        foreach($motifs as $motif){
            // parse the information from the logos html files
            $info_from_html = get_info_from_html($x_mer_content, $motif);
            if(count($info_from_html) <= 0 || count($info_from_html[3]) < 1) throw new Exception("Could not parse info from logos.html", 501);

            $motif_res[$motif] = array_map(
                $res_func,
                #$info_from_html[1],
                $info_from_html[2],
                $info_from_html[3],
                $info_from_html[4],
                $info_from_html[5]
            );
        }

        $x_mers_res[$x_mer] = array('motifs' => $motif_res);
    }

    // construct length distribution restuls
    $length_dist_res = array();
    $length_dist_content = file_get_contents($result_dir."/length_distribution.html");
    
    foreach($motifs as $motif){
        $info_from_html = get_length_info_from_html($length_dist_content, $motif);

        $res_func = function($id, $img){
            return array('id' => $id, 'img' => $img);
        };

        $length_dist_res[$motif] = array_map(
            $res_func,
            range(0, count($info_from_html)-1),
            $info_from_html
        );
    }

    return array('result_id' => $result_id, 'x_mers_data' => $x_mers_res, 'default_x_mer' => $default_x_mer, 'x_mers' => $x_mers, 'length_dist' => $length_dist_res);
}


function get_x_mers($html_content){
    $pattern = '/\>([0-9]+)\-mers\</';
    preg_match_all($pattern, $html_content, $out);
    return $out[1];
}


function get_default_x_mer($html_content){
    $pattern = '/core \(([0-9]+)\-mers\)/';
    preg_match_all($pattern, $html_content, $out);
    return $out[1][0];
}


/**
 * get_info_from_html
 *
 * parse image file names and the corresponding infos from logos.html
 *
 * @param $html_file
 * @return array of array
 */
function get_info_from_html($html_content, $motif){

    // first we get the part of the html we're interested in
    $motif_pattern = '/'.$motif.' motif(.+?)spacer/s';
    preg_match($motif_pattern, $html_content, $motif_out);

    // attention: because we cannot match an empty something, we're leaving the trailing " in the logos filepath and remove it afterwards.
    $entry_pattern = '/img src\=("")?(.+LoLa_L[0-9]+_'.$motif.'.+png")? width.+\<p\>(Trash|[0-9]+).+?([0-9]+).+?([\.|0-9]+).+\<\/p\>/';
    preg_match_all($entry_pattern, $motif_out[1], $entry_out);

    return $entry_out;
}


/**
 * get_motifs_from_html
 *
 * parse motifs from given html file
 *
 * @param $html_file_content
 * @return array of motif numbers
 */
function get_motifs_from_html($html_content){
    $pattern = '/([0-9]+) motif/';
    preg_match_all($pattern, $html_content, $out);
    return $out[1];
}


/**
 * parse filenames from length_distribution.html
 *
 * @param $html_content
 * @param $motif
 * @return mixed
 */
function get_length_info_from_html($html_content, $motif){
    $pattern = '/(lg_'.$motif.'.+png)/';
    preg_match_all($pattern, $html_content, $out);
    return $out[1];
}


?>