<?php

/**
 * get_results
 *
 * give back a json containing the results generated by the MixMHCp script
 *
 * @param string $result_id
 * @return json
 * @author Roman
 */

function get_results_zip($result_id){

    if(! preg_match('/^\w{13}$/', $result_id)) throw new Exception("ERROR: invalid ResultId", 501);

    // the data directory
    $result_dir = DATA_PATH."/".$result_id."/results";
    $zip_file = DATA_PATH."/".$result_id."/".$result_id.".zip";

    // create zip file if necessary
    if(! file_exists($zip_file)){
        create_zip($result_dir, $zip_file);
    }

    return $zip_file;
}


function create_zip($result_dir, $zip_file){
    $zip = new ZipArchive();

    if ($zip->open($zip_file, ZipArchive::CREATE)!==TRUE) {
        throw new Exception("cannot open [$zip_file]", 501);
    }

    $source = str_replace('\\', '/', realpath($result_dir));

    if (is_dir($source) === true)
    {
        $files = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($source), RecursiveIteratorIterator::SELF_FIRST);

        foreach ($files as $file)
        {
            $file = str_replace('\\', '/', $file);

            // Ignore "." and ".." folders
            if( in_array(substr($file, strrpos($file, '/')+1), array('.', '..')) )
                continue;

            $file = realpath($file);

            if (is_dir($file) === true)
            {
                $zip->addEmptyDir(str_replace($source . '/', '', $file . '/'));
            }
            else if (is_file($file) === true)
            {
                $zip->addFromString(str_replace($source . '/', '', $file), file_get_contents($file));
            }
        }
    }
    else if (is_file($source) === true)
    {
        $zip->addFromString(basename($source), file_get_contents($source));
    }

    $zip->close();
}



?>